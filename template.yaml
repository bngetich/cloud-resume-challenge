AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  cloud-resume-challenge

  Sample SAM Template for cloud-resume-challenge

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  GetFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: get_function/
      Handler: app.lambda_handler
      Runtime: python3.6
      Events:
        GET:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /get
            Method: get
      Policies: 
        - DynamoDBCrudPolicy:
            TableName: countertable

  PutFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: put_function/
      Handler: app.lambda_handler
      Runtime: python3.6
      Events:
        PUT:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /put
            Method: get
      Policies: 
      - DynamoDBCrudPolicy:
          TableName: countertable
    
  MyWebsite:
    Type: AWS::S3::Bucket
    Properties: 
      AccessControl: PublicRead
      WebsiteConfiguration: 
        IndexDocument: index.html
      BucketName: my-fantastic-website-kimu

  CounterTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: countertable
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: "siteviews"
          AttributeType: S
      KeySchema:
        - AttributeName: "siteviews"
          KeyType: HASH

  MyRoute53Record:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneId: Z0191064EIJRQZ2C9PCI 
      RecordSets:
        - Name: www.bngetich.com 
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt MyDistribution.DomainName 

  MyCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: www.bngetich.com
      ValidationMethod: DNS

  MyDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        ViewerCertificate:
          AcmCertificateArn: arn:aws:acm:us-east-1:870109634535:certificate/18f3cc82-ed2b-4949-8759-4a021ac33221
          SslSupportMethod: sni-only
        Aliases:
          - "www.bngetich.com"
        DefaultCacheBehavior:
          ViewerProtocolPolicy: allow-all
          TargetOriginId:  my-fantastic-website-kimu.s3-website.us-east-2.amazonaws.com
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          ForwardedValues:
            QueryString: false
        Origins:
          - DomainName: my-fantastic-website-kimu.s3-website.us-east-2.amazonaws.com
            Id: my-fantastic-website-kimu.s3-website.us-east-2.amazonaws.com
            CustomOriginConfig:
              OriginProtocolPolicy: match-viewer
        Enabled: true
        DefaultRootObject: index.html

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17 
        Statement:
        - Sid: PublicReadForGetBucketObjects 
          Effect: Allow
          Action: 's3:GetObject'
          Principal: "*"
          Resource:  
            - !Sub "arn:aws:s3:::${MyWebsite}/*"
      Bucket: !Ref MyWebsite

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  GetApi:
    Description: "API Gateway endpoint URL for Prod stage for Get function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get/"
  GetFunction:
    Description: "Get Lambda Function ARN"
    Value: !GetAtt GetFunction.Arn
  GetFunctionIamRole:
    Description: "Implicit IAM Role created for Get function"
    Value: !GetAtt GetFunction.Arn
